{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://management.azure.com/"
        }
    ],
    "info": {
        "description": "Use these REST APIs for performing operations on Certificate entity in your Azure API Management deployment. Certificates can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates).",
        "title": "ApiManagementClient",
        "version": "2016-10-10",
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
        },
        "x-origin": [
            {
                "format": "swagger",
                "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2016-10-10/apimcertificates.json",
                "version": "2.0"
            }
        ],
        "x-preferred": true,
        "x-providerName": "azure.com",
        "x-serviceName": "apimanagement-apimcertificates",
        "x-tags": [
            "Azure",
            "Microsoft"
        ]
    },
    "security": [
        {
            "azure_auth": [
                "user_impersonation"
            ]
        }
    ],
    "paths": {
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates": {
            "get": {
                "description": "Lists a collection of all certificates in the specified service instance.",
                "externalDocs": {
                    "url": "https://msdn.microsoft.com/en-us/library/azure/dn783483.aspx"
                },
                "operationId": "Certificates_ListByService",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "| Field          | Supported operators    | Supported functions                         |\n|----------------|------------------------|---------------------------------------------|\n| id             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| subject        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| thumbprint     | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| expirationDate | ge, le, eq, ne, gt, lt | N/A                                         |",
                        "in": "query",
                        "name": "$filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Number of records to return.",
                        "in": "query",
                        "name": "$top",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        }
                    },
                    {
                        "description": "Number of records to skip.",
                        "in": "query",
                        "name": "$skip",
                        "required": false,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a collection of Certificate entity.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Paged Certificates list representation.",
                                    "properties": {
                                        "count": {
                                            "description": "Total record count number across all pages.",
                                            "format": "int64",
                                            "type": "integer"
                                        },
                                        "nextLink": {
                                            "description": "Next page link if any.",
                                            "type": "string"
                                        },
                                        "value": {
                                            "description": "Page values.",
                                            "items": {
                                                "description": "Certificate details.",
                                                "properties": {
                                                    "expirationDate": {
                                                        "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "description": "Certificate identifier path: /certificates/{certificateId}",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "subject": {
                                                        "description": "Subject attribute of the certificate.",
                                                        "type": "string"
                                                    },
                                                    "thumbprint": {
                                                        "description": "Thumbprint of the certificate.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "subject",
                                                    "thumbprint",
                                                    "expirationDate"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Certificates"
                ],
                "x-ms-odata": "#/components/schemas/CertificateContract",
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}": {
            "delete": {
                "description": "Deletes specific certificate.",
                "operationId": "Certificates_Delete",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "certificateId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "The entity state (Etag) version of the certificate to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.",
                        "in": "header",
                        "name": "If-Match",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The certificate was successfully deleted."
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Certificates"
                ]
            },
            "get": {
                "description": "Gets the details of the certificate specified by its identifier.",
                "operationId": "Certificates_Get",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "certificateId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The response body contains the specified Certificate entity.",
                        "headers": {
                            "ETag": {
                                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Certificate details.",
                                    "properties": {
                                        "expirationDate": {
                                            "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "id": {
                                            "description": "Certificate identifier path: /certificates/{certificateId}",
                                            "readOnly": true,
                                            "type": "string"
                                        },
                                        "subject": {
                                            "description": "Subject attribute of the certificate.",
                                            "type": "string"
                                        },
                                        "thumbprint": {
                                            "description": "Thumbprint of the certificate.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "subject",
                                        "thumbprint",
                                        "expirationDate"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Certificates"
                ]
            },
            "put": {
                "description": "Creates or updates the certificate being used for authentication with the backend.",
                "externalDocs": {
                    "description": "How to secure back-end services using client certificate authentication in Azure API Management",
                    "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/"
                },
                "operationId": "Certificates_CreateOrUpdate",
                "parameters": [
                    {
                        "description": "The name of the resource group.",
                        "in": "path",
                        "name": "resourceGroupName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the API Management service.",
                        "in": "path",
                        "name": "serviceName",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 50,
                            "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$"
                        }
                    },
                    {
                        "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
                        "in": "path",
                        "name": "certificateId",
                        "required": true,
                        "x-ms-parameter-location": "method",
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256,
                            "pattern": "^[^*#&+:<>?]+$"
                        }
                    },
                    {
                        "description": "The entity state (Etag) version of the certificate to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation..",
                        "in": "header",
                        "name": "If-Match",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Version of the API to be used with the client request.",
                        "in": "query",
                        "name": "api-version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
                        "in": "path",
                        "name": "subscriptionId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The new certificate was successfully added."
                    },
                    "204": {
                        "description": "The certificate details were successfully updated."
                    },
                    "default": {
                        "description": "Error response describing why the operation failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Error Body contract.",
                                    "properties": {
                                        "code": {
                                            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
                                            "type": "string"
                                        },
                                        "details": {
                                            "description": "The list of invalid fields send in request, in case of validation error.",
                                            "items": {
                                                "description": "Error Field contract.",
                                                "properties": {
                                                    "code": {
                                                        "description": "Property level error code.",
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "description": "Human-readable representation of property-level error.",
                                                        "type": "string"
                                                    },
                                                    "target": {
                                                        "description": "Property name.",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "description": "Human-readable representation of the error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Certificates"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Parameters supplied to the CreateOrUpdate certificate operation.",
                                "properties": {
                                    "data": {
                                        "description": "Base 64 encoded certificate using the application/x-pkcs12 representation.",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Password for the Certificate",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "data",
                                    "password"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "Create parameters.",
                    "required": true
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CertificateCollection": {
                "description": "Paged Certificates list representation.",
                "properties": {
                    "count": {
                        "description": "Total record count number across all pages.",
                        "format": "int64",
                        "type": "integer"
                    },
                    "nextLink": {
                        "description": "Next page link if any.",
                        "type": "string"
                    },
                    "value": {
                        "description": "Page values.",
                        "items": {
                            "description": "Certificate details.",
                            "properties": {
                                "expirationDate": {
                                    "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "id": {
                                    "description": "Certificate identifier path: /certificates/{certificateId}",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "subject": {
                                    "description": "Subject attribute of the certificate.",
                                    "type": "string"
                                },
                                "thumbprint": {
                                    "description": "Thumbprint of the certificate.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "subject",
                                "thumbprint",
                                "expirationDate"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "CertificateContract": {
                "description": "Certificate details.",
                "properties": {
                    "expirationDate": {
                        "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
                        "format": "date-time",
                        "type": "string"
                    },
                    "id": {
                        "description": "Certificate identifier path: /certificates/{certificateId}",
                        "readOnly": true,
                        "type": "string"
                    },
                    "subject": {
                        "description": "Subject attribute of the certificate.",
                        "type": "string"
                    },
                    "thumbprint": {
                        "description": "Thumbprint of the certificate.",
                        "type": "string"
                    }
                },
                "required": [
                    "subject",
                    "thumbprint",
                    "expirationDate"
                ],
                "type": "object"
            },
            "CertificateCreateOrUpdateParameters": {
                "description": "Parameters supplied to the CreateOrUpdate certificate operation.",
                "properties": {
                    "data": {
                        "description": "Base 64 encoded certificate using the application/x-pkcs12 representation.",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password for the Certificate",
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "password"
                ],
                "type": "object"
            }
        },
        "parameters": {
            "CertificateIdParameter": {
                "description": "Identifier of the certificate entity. Must be unique in the current API Management service instance.",
                "in": "path",
                "name": "certificateId",
                "required": true,
                "x-ms-parameter-location": "method",
                "schema": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256,
                    "pattern": "^[^*#&+:<>?]+$"
                }
            }
        },
        "securitySchemes": {
            "azure_auth": {
                "description": "Azure Active Directory OAuth2 Flow.",
                "type": "oauth2",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
                        "scopes": {
                            "user_impersonation": "impersonate your user account"
                        },
                        "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
                    }
                }
            }
        }
    }
}